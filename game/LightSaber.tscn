[gd_scene load_steps=18 format=2]

[ext_resource path="res://game/LightSaber.material" type="Material" id=1]
[ext_resource path="res://game/LightSaber.gd" type="Script" id=2]
[ext_resource path="res://game/data/lightsaber.ogg" type="AudioStream" id=3]
[ext_resource path="res://game/LightSaber_Trail.gd" type="Script" id=4]

[sub_resource type="CapsuleMesh" id=1]
resource_local_to_scene = true
material = ExtResource( 1 )
radius = 0.015
mid_height = 1.2

[sub_resource type="CylinderMesh" id=2]
top_radius = 0.015
bottom_radius = 0.015
height = 0.15

[sub_resource type="SpatialMaterial" id=3]
albedo_color = Color( 0.435294, 0, 0.427451, 1 )

[sub_resource type="Shader" id=4]
code = "shader_type spatial;
render_mode unshaded,blend_add;

uniform float is_ball : hint_range(0.0,1.0);

mat3 facecam(vec3 vector){
	vec3 a = normalize(cross(vector,vec3(0.0,1.0,0.0)));
	vec3 c = normalize(vector);
	vec3 b = cross(a,c);
	return mat3(a,b,c);
}

varying float hide;
varying float strechgrid;
void vertex(){
	vec3 cam_pos = (WORLD_MATRIX[3].xyz-CAMERA_MATRIX[3].xyz)*mat3(WORLD_MATRIX);
	vec3 ara = normalize(cam_pos);
	mat3 viewball = facecam(cam_pos);
	cam_pos *= vec3(1.0,0.0,1.0);
	mat3 viewlocked = facecam(cam_pos);
	
	hide = dot( vec3(0.0,0.0,1.0)*viewlocked, ara );
	hide = sqrt(max(hide-0.2,0.0));
	VERTEX = mix(viewlocked*VERTEX,viewball*VERTEX,is_ball);
	UV = (UV-0.5)*2.0;
}

float glow( vec2 uv ){
	uv = 1.0-abs(uv);
	vec2 y = mix(vec2(1.4,0.15), vec2(1.1), is_ball);
	uv = smoothstep( vec2(0.0), y, uv );
	return (uv.x*uv.y);
}
uniform vec4 color : hint_color;
void fragment(){
	float glo = glow(UV);
	ALBEDO = color.rgb*2.0;
	ALPHA = glo*hide;
}"

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = SubResource( 4 )
shader_param/is_ball = 0.0
shader_param/color = Color( 1, 0, 0, 1 )

[sub_resource type="QuadMesh" id=6]
resource_local_to_scene = true
material = SubResource( 5 )
size = Vector2( 0.15, 1.35 )

[sub_resource type="CylinderShape" id=7]
radius = 0.01
height = 1.2

[sub_resource type="Animation" id=8]
tracks/0/type = "value"
tracks/0/path = NodePath("LightSaber_Mesh:mesh:mid_height")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.2, 0.001 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("LightSaber_Mesh:translation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0.65, 0 ), Vector3( 0, 0.05, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("CollisionShape:disabled")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("tip:translation")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 1.26252, 0 ), Vector3( 0, 0.0503954, 0 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Glow_Mesh:translation")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0.65, 0 ), Vector3( 0, 0.05, 0 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Glow_Mesh:mesh:size")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0.15, 1.35 ), Vector2( 0.15, 0.15 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Glow_Mesh:mesh:material:shader_param/is_ball")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 4, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("LightSaber_Mesh:mesh:material:shader_param/is_ball")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 4, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[sub_resource type="Animation" id=9]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("LightSaber_Mesh:mesh:mid_height")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.001 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("LightSaber_Mesh:translation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0, 0.05, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("CollisionShape:disabled")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("tip:translation")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0, 0.0486096, 0 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Glow_Mesh:mesh:size")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0.15, 0.15 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Glow_Mesh:mesh:material:shader_param/is_ball")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Glow_Mesh:translation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0, 0.05, 0 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("LightSaber_Mesh:mesh:material:shader_param/is_ball")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}

[sub_resource type="Animation" id=10]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("LightSaber_Mesh:mesh:mid_height")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.001, 1.2 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("LightSaber_Mesh:translation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0.05, 0 ), Vector3( 0, 0.65, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, true ]
}
tracks/3/type = "audio"
tracks/3/path = NodePath("AudioStreamPlayer3D")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 3 )
} ],
"times": PoolRealArray( 0 )
}
tracks/4/type = "value"
tracks/4/path = NodePath("CollisionShape:disabled")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("tip:translation")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0.0523572, 0 ), Vector3( 0, 1.26252, 0 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Glow_Mesh:mesh:size")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0.15, 0.15 ), Vector2( 0.15, 1.35 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("Glow_Mesh:translation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0.05, 0 ), Vector3( 0, 0.65, 0 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("Glow_Mesh:mesh:material:shader_param/is_ball")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 0.25, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("LightSaber_Mesh:mesh:material:shader_param/is_ball")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 0.25, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}

[sub_resource type="Shader" id=11]
code = "shader_type spatial;
render_mode cull_disabled, unshaded, blend_mix;

uniform vec4 color;
uniform int size;

void fragment(){
	vec2 customUV = floor( (UV*200.0)+vec2(fract(TIME*5.0)*18.0,0.0) );
//	int cool_formula = int( dot(vec2(customUV*1.25),customUV) );
	int cool_formula = int( dot(vec2(1000.0),SCREEN_UV.xy) );
	ALPHA_SCISSOR = float((cool_formula % size) )/float(size-1);
	
	ALBEDO = color.rgb;
	ALPHA = UV.x;
//	ALPHA *= smoothstep(1.0,0.94,abs(UV.y-0.5)*2.0);
}"

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )
shader_param/color = Plane( 1, 0, 0, 0 )
shader_param/size = 4

[sub_resource type="QuadMesh" id=13]
material = SubResource( 12 )
size = Vector2( 1, 1.281 )

[sub_resource type="QuadMesh" id=13]
material = SubResource( 12 )
size = Vector2( 1, 1.281 )

[node name="LightSaber" type="Area"]
transform = Transform( 1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 0, 0 )
collision_layer = 16
collision_mask = 19
script = ExtResource( 2 )

[node name="LightSaber_Mesh" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -8.9407e-08, 1, 0, -1, -8.9407e-08, 0, 0.65, 0 )
mesh = SubResource( 1 )
material/0 = null

[node name="Hilt_Mesh" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.03, 0 )
mesh = SubResource( 2 )
material/0 = SubResource( 3 )

[node name="Glow_Mesh" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.65, 0 )
mesh = SubResource( 6 )
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.6, 0 )
shape = SubResource( 7 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Hide = SubResource( 8 )
anims/QuickHide = SubResource( 9 )
anims/Show = SubResource( 10 )

[node name="AudioStreamPlayer3D" type="AudioStreamPlayer3D" parent="."]
stream = ExtResource( 3 )

[node name="ImmediateGeometry" type="ImmediateGeometry" parent="."]
material_override = SubResource( 12 )
script = ExtResource( 4 )

[node name="base" type="Position3D" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.0508851, 0 )

[node name="tip" type="Position3D" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.26252, 0 )

[node name="RayCast" type="RayCast" parent="."]
cast_to = Vector3( 0, 1.26, 0 )
collision_mask = 8

[node name="Trail_Preview" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 0.647, 0 )
mesh = SubResource( 13 )
material/0 = null
